# @package _global_

###########################
### Classification with Hierarchical Attention Network 
### Bankruptcy predictions

defaults:
  - /datamodule: bankruptcy_tab
  - /trainer: bankruptcy
  - /callbacks
  
#GENERAL
version: 1.0
implementation: "bank-hyperparameter-tuning"
comments: "m0del v1.1"
name: "ffn-3"
model_name: "tab_ffn"
seed: 2023


stage: "finetuning" # pre_training, finetuning, prediction, hyp_tune
cls_num_targets: 2
num_targets: 2
pooled: False #if the final representation is an averaged version of the sequence
ckpt_path: ${last_ckpt:${callbacks.checkpoint_cls.dirpath}} ##a bit weird implementation - fix later
callbacks.checkpoint.dirpath: ${ckpt_path}

###########################
###################### MODEL
model:
  _target_: src.models.ffn.FFN
  _convert_: all
  hparams:

    input_size: 985 #this one you should knwo in advance (fix later) ## NB CHANGE VALUE
    hidden_size: 128
    n_layers: 8
    dropout: 0.35
    batch_size: ${datamodule.batch_size}

    encoder_type: 'neural' #or 'logistic'


    #### CLS SPECIFIC
    cls_num_targets: ${cls_num_targets}
    num_targets: ${num_targets}
    loss_type: "entropy"
    average_type: 'micro'
    #class_weights: [1/0.963, 1/0.037]
    #class_weights: [1.0384, 27.0270]
    class_weights: [1.0,1.0]
    

    learning_rate: 0.001
    weight_decay: 1.e-4
    beta1: 0.9
    beta2: 0.999
    adamsgrad: True
    epsilon: 1.e-6
    training_task: ${datamodule.task.name} 
    stage: ${stage}
    implementation: ${implementation}
    version: ${version}
    experiment_name: ${name}_${model_name}
    experiment_version: ${version} 

trainer:
  accelerator: 'gpu'
  devices: [0]
  callbacks:
  - ${callbacks.checkpoint_cls}
  - ${callbacks.lr_monitor}
  - ${callbacks.silence_warnings}
  - ${callbacks.reseed_dataloader}
  - ${callbacks.early_stopping}
  - ${callbacks.track_ids}
  #- ${callbacks.collect_outputs} 